library(C50)
rm(list=ls())
rm(list=ls())
library(C50)
data = read.csv('adult_income_Bayes.csv',header=TRUE, sep=",", na.string = " ?")
rm(list=ls())
library(C50)
data = read.csv('adult_income_Bayes.csv',header=TRUE, sep=",", na.string = " ?")
data = read.csv('adult_income_Dtree.csv',header=TRUE, sep=",", na.string = " ?")
View(data)
test <- data[seq(1, nrow(data), by = 5),]
train <- data[-seq(5, nrow(data), by = 5),]
model<-C5.0(Income~.,train[,-1])
summary(model)
prediction<-predict(model,test[,-1],type="class")
conf_matrix<-table(test$Income,prediction)
conf_matrix
str(prediction)
#Showing the error rate
wrong<-sum(test$Income!=prediction)
error_rate<-wrong/length(test$Income)
error_rate
plot(model)
# Knowledge Discovery and Data Mining (CS 513B)
# Course      : CS 513B
# First Name  : Sanket
# Last Name   : Patidar
# CWID        : 10445969
# Purpose     : MidTerm Q8
#####################################################
rm(list=ls())
library(C50)
dataSet<-read.csv("adult_income_Dtree.csv",na.strings = ' ?')
View(dataSet)
dataSet<-as.data.frame(apply(dataSet,2,function(x)gsub('\\s+', '',x)))
View(dataSet)
#a)Select every fifth record, starting with the first record, as the test dataset and the remaining records as the training dataset
index<-seq(1,nrow(dataSet),by=5)
test<-dataSet[index,]
train<-dataSet[-index,]
#b)Perform C5.0 analysis
model<-C5.0(Income~.,train)
plot(model)
#Prediction using te111st
prediction<-predict(model,test,type="class")
#c)Score the test dataset
conf_matrix<-table(test$Income,prediction)
conf_matrix
str(prediction)
#d)Measure the error rate.
wrong<-sum(test$Income!=prediction)
error_rate<-wrong/length(test$Income)
error_rate
rm(list=ls())
library(C50)
dataSet<-read.csv("adult_income_Dtree.csv",na.strings = ' ?')
View(dataSet)
dataSet<-as.data.frame(apply(dataSet,2,function(x)gsub('\\s+', '',x)))
View(dataSet)
#a)Select every fifth record, starting with the first record, as the test dataset and the remaining records as the training dataset
index<-seq(1,nrow(dataSet),by=5)
test<-dataSet[index,]
train<-dataSet[-index,]
#b)Perform C5.0 analysis
model<-C5.0(Income~.,train)
plot(model)
#Prediction using te111st
prediction<-predict(model,test,type="class")
#c)Score the test dataset
conf_matrix<-table(test$Income,prediction)
conf_matrix
str(prediction)
#d)Measure the error rate.
wrong<-sum(test$Income!=prediction)
error_rate<-wrong/length(test$Income)
error_rate
