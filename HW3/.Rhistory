install.packages("C50")
# clear environment
rm(list=ls())
# install.packages("C50")
library('C50')
# read data
dat<-read.csv("breast-cancer-wisconsin.data.csv")
# categories are represented by the ??factor?? data type in R
categories<-factor(dat[,11])
dat<-cbind(dat[,2:10], categories)
# generate training and test set
index<-sort(sample(nrow(dat), round(.25*nrow(dat))))
training<-dat[-index,]
test<-dat[index,]
# run algorithms
C50_class<-C5.0(categories~., data=training)
summary(C50_class)
plot(C50_class)
C50_predict<-predict(C50_class, test, type="class")
table(actual=test[,10], C50=C50_predict)
wrong<-(test[,10]!=C50_predict)
c50_rate<-sum(wrong)/length(test[,10])
c50_rate
wrong<-(test[,10]!=C50_predict)
c50_rate<-(1 - sum(wrong))/length(test[,10])
c50_rate
wrong<-(test[,10]!=C50_predict)
c50_rate<-1-(sum(wrong)/length(test[,10]))
c50_rate
C50_predict<-predict(C50_class, test, type="class")
table(actual=test[,10], C50=C50_predict)
wrong<-(test[,10]!=C50_predict)
c50_rate<-100-(sum(wrong)/length(test[,10]))
c50_rate
library(class)
library(rpart)
rm(list = ls())
setwd("C:\\Users\\varsh\\Desktop\\varsha\\MS - Stevens\\Knowledge Management and Data mining\\Assignment-2")
rm(list = ls())
setwd("/Users/parthxparab/Documents/Fall 2019/CS513/HW3")
df = read.csv('breast-cancer-wisconsin.data.csv',header=TRUE, sep=",")
head(df, n=5)
#Summarizing each column (e.g. min, max, mean )
summary(df)
#Here we see that the summary for only column F6 hasn't been calculated on account of non-numeric characters in the column
n <- as.numeric(as.character(df$F6))
summary(n, na.rm = TRUE)
df$F6 <- n
summary(df, na.rm = TRUE)
#Check the number of rows before
nrow(df)
#Remove the rows with missing values
df <- na.omit(df)
#Check the number of rows after
nrow(df)
#Convert labels to factor class
df$Class<- factor(df$Class , levels = c("2","4") , labels = c("Benign","Malignant"))
#Check if factor class
is.factor(df$Class)
#Generate train and test in the ratio 70% to 30%
df<- df[2:11]
size <- floor(0.70 * nrow(df))
#Set the seed
set.seed(123)
random <- sample(seq_len(nrow(df)), size = size)
#70% data in train dataset
train <- df[random, ]
#30% data in test dataset
test <- df[-random, ]
#Implementing CART
cart <- rpart(Class ~ ., data = train, method = "class")
#Predicting class for test set
predicted <- predict(cart, test, type = "class")
print(length(predicted))
print(length(test$Class))
#Confusion Matrix
conf_matrix <- table(predicted,test$Class)
print(conf_matrix)
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(conf_matrix)
# clear environment
rm(list=ls())
# install.packages("C50")
library('C50')
# read data
dat<-read.csv("breast-cancer-wisconsin.data.csv")
# categories are represented by the ??factor?? data type in R
categories<-factor(dat[,11])
dat<-cbind(dat[,2:10], categories)
# generate training and test set
index<-sort(sample(nrow(dat), round(.25*nrow(dat))))
training<-dat[-index,]
test<-dat[index,]
# run algorithms
C50_class<-C5.0(categories~., data=training)
summary(C50_class)
plot(C50_class)
C50_predict<-predict(C50_class, test, type="class")
table(actual=test[,10], C50=C50_predict)
wrong<-(test[,10]!=C50_predict)
c50_rate<-100-(sum(wrong)/length(test[,10]))
c50_rate
library(class)
library(rpart)
rm(list = ls())
setwd("/Users/parthxparab/Documents/Fall 2019/CS513/HW3")
df = read.csv('breast-cancer-wisconsin.data.csv',header=TRUE, sep=",")
head(df, n=5)
#Summarizing each column (e.g. min, max, mean )
summary(df)
#Here we see that the summary for only column F6 hasn't been calculated on account of non-numeric characters in the column
n <- as.numeric(as.character(df$F6))
summary(n, na.rm = TRUE)
df$F6 <- n
summary(df, na.rm = TRUE)
#Check the number of rows before
nrow(df)
#Remove the rows with missing values
df <- na.omit(df)
#Check the number of rows after
nrow(df)
#Convert labels to factor class
df$Class<- factor(df$Class , levels = c("2","4") , labels = c("Benign","Malignant"))
#Check if factor class
is.factor(df$Class)
#Generate train and test in the ratio 70% to 30%
df<- df[2:11]
size <- floor(0.70 * nrow(df))
#Set the seed
set.seed(123)
random <- sample(seq_len(nrow(df)), size = size)
#70% data in train dataset
train <- df[random, ]
#30% data in test dataset
test <- df[-random, ]
#Implementing CART
cart <- rpart(Class ~ ., data = train, method = "class")
#Predicting class for test set
predicted <- predict(cart, test, type = "class")
print(length(predicted))
print(length(test$Class))
#Confusion Matrix
conf_matrix <- table(predicted,test$Class)
print(conf_matrix)
#Accuracy
accuracy <- function(x){sum(diag(x)/(sum(rowSums(x)))) * 100}
accuracy(conf_matrix)
